%h1= @question.title

.vote-cell
  = link_to [@question, :vote_up], remote: true, data: {type: 'json'}, class: 'upvote' + vote_class(@question, :up), title: upvote_text(@question) do
    %span.glyphicon.glyphicon-chevron-up
    .text= upvote_text(@question)

  .vote-sum= @question.vote_sum

  = link_to [@question, :vote_down], remote: true, data: {type: 'json'}, class: 'downvote' + vote_class(@question, :down), title: downvote_text(@question) do
    %span.glyphicon.glyphicon-chevron-down
    .text= downvote_text(@question)

  = link_to [:favor, @question], remote: true, data: {type: 'json'}, class: 'favor' + favor_class(@question), title: @question.favored_by?(current_user) ? t('favorite.favored') : t('favorite.favor') do
    %span.glyphicon.glyphicon-star
    .text= @question.favored_by?(current_user) ? t('favorite.favored') : t('favorite.favor')

.question-cell
  .question-body
    .question-meta
      %span.views-count
        %span.glyphicon.glyphicon-eye-open
        = @question.views_count
      %span.created-ago
        %span.glyphicon.glyphicon-time
        = timeago_tag @question.updated_at, lang: I18n.locale

    .question-text
      = @question.body.html_safe
    %ul.question-files
      - @question.attachments.build
      - @question.attachments.each do |attachment|
        - if attachment.persisted?
          %li
            %span.glyphicon.glyphicon-file
            = link_to attachment.file.filename, attachment.file.url

  - if @question.from?(current_user)
    .question-edit-form
      = render 'form'

  .tags
    - @question.tags.each do |tag|
      = link_to tag.name, tag

  .row.question-details
    - if @question.from?(current_user)
      .controls.col-sm-6
        = link_to t('common.edit'), [:edit, @question], class: 'edit btn btn-warning btn-xs'
        = link_to t('common.delete'), @question, class: 'delete btn btn-danger btn-xs', method: :delete, data: { confirm: t("common.sure") }

    .started.col-sm-6.pull-right
      = timeago_tag @question.created_at, lang: I18n.locale
      %span.author
        = link_to @question.user do
          = image_tag @question.user.avatar_url(:thumb), class: 'avatar'
          = @question.user.name
      %span.author-reputation

  .comments
    = render 'comments/comments', commentable: @question

  .comment-create-form
    = render 'comments/form', commentable: @question, comment: @comment, edit: true

  - if @question.bounty
    .bounty
      = t('bounty.offered', points: @question.bounty.value).html_safe
      %br
      = link_to t('bounty.stop'), stop_bounty_path(@question), method: 'delete'

  - if user_signed_in?
    = link_to t('comment.add'), new_question_comment_path(@question), class: 'add-comment btn btn-default btn-xs'

  - if @question.from?(current_user) && @question.bounty.nil?
    = render 'bounties/form'

    = link_to t('bounty.start'), '#', class: 'start-bounty btn btn-default btn-xs'